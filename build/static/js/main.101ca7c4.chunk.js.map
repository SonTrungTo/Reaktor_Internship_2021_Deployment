{"version":3,"sources":["components/theme.ts","components/Text.tsx","utils.ts","components/Icons/index.tsx","services/availabilityServices.ts","hooks/useAvailability.ts","components/AvailabilityIcon/index.tsx","components/ProductItem/index.tsx","services/productsServices.ts","hooks/useProducts.ts","components/FacemasksList/index.tsx","components/BeaniesList/index.tsx","components/GlovesList/index.tsx","components/AppBar/index.tsx","components/LinkButton.tsx","components/NavigationMenu/index.tsx","MainRouter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","colors","primary","textPrimary","textSecondary","textBar","appBackgroundColor","itemBackgroundColor","error","inactiveButton","fontSizes","body","subheading","fonts","main","secondary","fontWeights","normal","bold","useStyles","makeStyles","text","color","fontSize","fontFamily","fontWeight","fontWeightBold","colorTextSecondary","colorPrimary","colorTextBar","fontSizeSubheading","Text","style","props","styles","normalStyle","fontWeightBoldStyle","colorTextSecondaryStyle","colorPrimaryStyle","colorTextBarStyle","fontSizeSubheadingStyle","extraStyles","undefined","Typography","className","assertNever","value","Error","JSON","stringify","isAvailability","parseManufacturerInfo","code","parseNumber","response","parseResponseArray","Array","isArray","map","val","parseResponse","id","parseString","DATAPAYLOAD","isString","isNumber","Number","String","parseProductAvailability","data","productId","console","log","manufacturerList","productData","find","product","toLowerCase","productInStockValue","split","productAvailability","slice","length","parseAvailabilityString","FacemaskIcon","availability","icon","faHeadSideMask","size","BeanieIcon","faHatWizard","GlovesIcon","faMitten","CircleIcon","faCircle","getAll","manufacturer","a","config","headers","axios","get","useAvailability","useState","setAvailability","useEffect","sessionStorage","getItem","parsedData","parse","cachedData","localStorage","availabilityServices","then","setItem","clear","catch","err","AvailabilityIcon","type","card","marginBottom","marginLeft","marginRight","backgroundColor","priceText","borderRadius","paddingLeft","paddingRight","avatar","borderStyle","borderWidth","labelText","colorDistance","ProductItem","name","price","Card","elevation","CardHeader","Avatar","aria-label","action","Fragment","title","subheader","CardContent","col","useProducts","products","setProducts","productsServices","FacemasksList","productsList","BeaniesList","GlovesList","appBar","padding","AppBar","linkButton","width","link","textDecoration","LinkButton","to","children","normalStyles","Button","variant","container","flexDirection","top","position","isActive","NavigationMenu","withRouter","history","pathname","location","MainRouter","Container","fixed","Grid","spacing","item","xs","path","exact","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.101ca7c4.chunk.js","sourcesContent":["const theme = {\n    colors: {\n        primary: '#0366d6',\n        textPrimary: '#24292e',\n        textSecondary: '#586069',\n        textBar: '#ffffff',\n        appBackgroundColor: '#24292e',\n        itemBackgroundColor: '#e1e4e8',\n        error: '#d73a4a',\n        inactiveButton: '#474747'\n    },\n    fontSizes: {\n        body: 14,\n        subheading: 18\n    },\n    fonts: {\n        main: 'Roboto',\n        secondary: 'System'\n    },\n    fontWeights: {\n        normal: 500,\n        bold: 900\n    }\n};\n\nexport default theme;","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core\";\n\nimport theme from \"./theme\";\n\nconst useStyles = makeStyles(() => ({\n    text: {\n        color: theme.colors.textPrimary,\n        fontSize: theme.fontSizes.body,\n        fontFamily: theme.fonts.main,\n        fontWeight: theme.fontWeights.normal\n    },\n    fontWeightBold: {\n        fontWeight: theme.fontWeights.bold\n    },\n    colorTextSecondary: {\n        color: theme.colors.textSecondary\n    },\n    colorPrimary: {\n        color: theme.colors.primary\n    },\n    colorTextBar: {\n        color: theme.colors.textBar\n    },\n    fontSizeSubheading: {\n        fontSize: theme.fontSizes.subheading\n    }\n}));\n\nconst Text: React.FC<{ fontWeight?: string, color?: string, fontSize?: string,\nstyle?: string, id?: string }>\n= ({ fontWeight, color, fontSize, style, ...props }) => {\n    const styles = useStyles();\n    const normalStyle = styles.text;\n    const fontWeightBoldStyle =\n        fontWeight === \"bold\" ? styles.fontWeightBold : \"\";\n    const colorTextSecondaryStyle =\n        color === \"textSecondary\" ? styles.colorTextSecondary : \"\";\n    const colorPrimaryStyle =\n        color === \"primary\" ? styles.colorPrimary : \"\";\n    const colorTextBarStyle =\n        color === \"textBar\" ? styles.colorTextBar : \"\";\n    const fontSizeSubheadingStyle =\n        fontSize === \"subheading\" ? styles.fontSizeSubheading : \"\";\n    const extraStyles = style !== undefined ? style : \"\";\n    \n    return <Typography className={\n        ` ${normalStyle} ${fontWeightBoldStyle} ` +\n        ` ${colorPrimaryStyle} ${colorTextSecondaryStyle} ` +\n        ` ${colorTextBarStyle} ${fontSizeSubheadingStyle} ${extraStyles} `\n    } {...props} />;\n};\n\nexport default Text;","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/restrict-template-expressions */\nimport { Availability, ManufacturerInfo, AllProducts, Response } from \"./types\";\n\nexport const assertNever = (value: never): never => {\n    throw new Error(`Unexpected value: ${JSON.stringify(value)}`);\n};\n\nconst parseAvailabilityString = (data: string | undefined): Availability => {\n    if (!data || !isAvailability(data)) {\n        throw new Error(`Invalid stock value: undefined or ${data ? data : \"else\"}`);\n    }\n\n    return data;\n};\n\nconst isAvailability = (value: string | undefined): value is Availability => {\n    return value === 'INSTOCK' || value === 'OUTOFSTOCK' || value === 'LESSTHAN10';\n};\n\nexport const parseManufacturerInfo = (value: any | null): ManufacturerInfo => {\n    return {\n        code: parseNumber(value.code),\n        response: parseResponseArray(value.response)\n    };\n};\n\nconst parseResponseArray = (value: any | null): Response[] => {\n    if (!value || !Array.isArray(value)) {\n        throw new Error(`Invalid response array of any`);\n    }\n    const newValues = value.map(val => parseResponse(val));\n    return newValues;\n};\n\nconst parseResponse = (value: any | null): Response => {\n    return {\n        id: parseString(value.id),\n        DATAPAYLOAD: parseString(value.DATAPAYLOAD)\n    };\n};\n\nconst parseString = (value: any | null): string => {\n    if (!value || !isString(value)) {\n        throw new Error(`Invalid string type: ${value}`);\n    }\n\n    return value;\n};\n\nconst parseNumber = (value: any | null): number => {\n    if (!value || !isNumber(value)) {\n        throw new Error(`Invalid number type: ${value}`);\n    }\n\n    return value;\n};\n\nconst isNumber = (value: any | null): value is number => {\n    return typeof value === \"number\" || value instanceof Number;\n};\n\nconst isString = (value: any | null): value is string => {\n    return typeof value === \"string\" || value instanceof String;\n};\n\nexport const parseProductAvailability = (data: ManufacturerInfo, productId: AllProducts[\"id\"]): Availability => {\n    console.log(data);\n    // Fetching product list of a manufacturer\n    const manufacturerList = data ?\n        data.response\n        : undefined;\n    // Finding the appropriate product in the list\n    const productData = manufacturerList ?\n        manufacturerList.find(product => productId.toLowerCase() === product.id.toLowerCase())\n        : undefined;\n    console.log(productData);\n    // Splitting the string in the DATAPAYLOAD for the next step\n    const productInStockValue = productData ?\n        productData.DATAPAYLOAD.split(\"\\n  \") : undefined;\n    console.log(productInStockValue);\n    // Applying appropriate methods to retrieve the necessary info for availability\n    const productAvailability = productInStockValue ?\n        productInStockValue[2]\n        .slice(\"<INSTOCKVALUE>\".length, productInStockValue[2].length - \"</INSTOCKVALUE>\\n</AVAILABILITY>\".length)\n        : undefined;\n    console.log(productAvailability);\n    \n    return parseAvailabilityString(productAvailability);\n};","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeadSideMask,\n    faMitten, faHatWizard, faCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { Availability } from \"../../types\";\nimport { assertNever } from \"../../utils\";\n\nexport const FacemaskIcon: React.FC<{ availability: Availability }>\n= ({ availability }) => {\n    switch (availability) {\n        case 'INSTOCK':\n            return <FontAwesomeIcon icon={faHeadSideMask} color=\"green\" size=\"lg\" />;\n    \n        case 'OUTOFSTOCK':\n            return <FontAwesomeIcon icon={faHeadSideMask} color=\"red\" size=\"lg\" />;\n\n        case 'LESSTHAN10':\n            return <FontAwesomeIcon icon={faHeadSideMask} color=\"yellow\" size=\"lg\" />;\n\n        default:\n            return assertNever(availability);\n    }\n};\n\nexport const BeanieIcon: React.FC<{ availability: Availability }>\n= ({ availability }) => {\n    switch (availability) {\n        case 'INSTOCK':\n            return <FontAwesomeIcon icon={faHatWizard} color=\"green\" size=\"lg\" />;\n    \n        case 'OUTOFSTOCK':\n            return <FontAwesomeIcon icon={faHatWizard} color=\"red\" size=\"lg\" />;\n\n        case 'LESSTHAN10':\n            return <FontAwesomeIcon icon={faHatWizard} color=\"yellow\" size=\"lg\" />;\n\n        default:\n            return assertNever(availability);\n    }\n};\n\nexport const GlovesIcon: React.FC<{ availability: Availability }>\n= ({ availability }) => {\n    switch (availability) {\n        case 'INSTOCK':\n            return <FontAwesomeIcon icon={faMitten} color=\"green\" size=\"lg\" />;\n    \n        case 'OUTOFSTOCK':\n            return <FontAwesomeIcon icon={faMitten} color=\"red\" size=\"lg\" />;\n\n        case 'LESSTHAN10':\n            return <FontAwesomeIcon icon={faMitten} color=\"yellow\" size=\"lg\" />;\n\n        default:\n            return assertNever(availability);\n    }\n};\n\nexport const CircleIcon: React.FC<{ color: string, style?: string, id?: string }>\n= ({ color, style, id }) => <FontAwesomeIcon id={id}\nicon={faCircle} color={color} size=\"sm\" className={style} />;","import axios from \"axios\";\nimport { AllProducts, ManufacturerInfo } from \"../types\";\n\nconst baseUrl = '/v2/availability';\n\nconst getAll\n= async (manufacturer: AllProducts[\"manufacturer\"]): Promise<ManufacturerInfo> => {\n    const config = {\n        headers: {\n            'Cache-Control': 'public,max-age=300,immutable'\n        }\n    };\n\n    const response = await axios.get<ManufacturerInfo>(`${baseUrl}/${manufacturer}`, config);\n    return response.data;\n};\n\nexport default {\n    getAll\n};","import { useEffect, useState } from \"react\";\nimport availabilityServices from \"../services/availabilityServices\";\nimport { parseProductAvailability, parseManufacturerInfo } from \"../utils\";\n\nimport { AllProducts, Availability } from \"../types\";\n\nconst useAvailability\n= (manufacturer: AllProducts[\"manufacturer\"], productId: AllProducts[\"id\"]) => {\n    const [ availability, setAvailability ] = useState<Availability | undefined>(undefined);\n\n    useEffect(() => {\n        if (sessionStorage.getItem(manufacturer)) { // Fetch availability only once to increase the reloading speed\n            const parsedData = JSON.parse(String(sessionStorage.getItem(manufacturer))); // eslint-disable-line\n            const cachedData = parseManufacturerInfo(parsedData);\n            const productAvailability = parseProductAvailability(cachedData, productId);\n            setAvailability(productAvailability);\n            return;\n        } else if (localStorage.getItem(manufacturer)) { // This is because storageSession limit is only 5MB, and it's not enough\n            const parsedData = JSON.parse(String(localStorage.getItem(manufacturer))); // eslint-disable-line\n            const cachedData = parseManufacturerInfo(parsedData);\n            const productAvailability = parseProductAvailability(cachedData, productId);\n            setAvailability(productAvailability);\n            return;\n        }\n        availabilityServices.getAll(manufacturer)\n        .then(data => {\n            const productAvailability = parseProductAvailability(data, productId);\n            setAvailability(productAvailability);\n            if (sessionStorage.length < 5) {\n                sessionStorage.setItem(manufacturer, JSON.stringify(data));\n            } else if (!sessionStorage.getItem(manufacturer)) {\n                localStorage.clear();\n                localStorage.setItem(manufacturer, JSON.stringify(data));\n            }\n        })\n        .catch(err => console.log(err));\n    }, []);\n\n    return {\n        availability\n    };\n};\n\nexport default useAvailability;","import React from \"react\";\n\nimport { AllProducts } from \"../../types\";\nimport { FacemaskIcon,\n    BeanieIcon, GlovesIcon } from \"../Icons\";\nimport Text from \"../Text\";\n\nimport { assertNever } from \"../../utils\";\nimport useAvailability from \"../../hooks/useAvailability\";\n\nconst AvailabilityIcon: React.FC<\n    {\n        type: AllProducts[\"type\"],\n        manufacturer: AllProducts[\"manufacturer\"],\n        id: AllProducts[\"id\"]\n    }\n>\n= ({ type, manufacturer, id }) => {\n    const { availability } = useAvailability(manufacturer, id);\n\n    if (!availability) {\n        return (\n            <Text fontWeight=\"bold\">\n                Error\n            </Text>\n        );\n    }\n\n    switch (type) {\n        case 'facemasks':\n            return <FacemaskIcon availability={availability} />;\n        \n        case 'beanies':\n            return <BeanieIcon availability={availability} />;\n\n        case 'gloves':\n            return <GlovesIcon availability={availability} />;\n    \n        default:\n            return assertNever(type);\n    }\n};\n\nexport default AvailabilityIcon;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport theme from \"../theme\";\nimport Text from \"../Text\";\nimport AvailabilityIcon from \"../AvailabilityIcon\";\nimport { AllProducts } from \"../../types\";\nimport { CircleIcon } from \"../Icons\";\n\nconst useStyles = makeStyles(() => ({\n    card: {\n        marginBottom: 10,\n        marginLeft: 15,\n        marginRight: 15,\n        backgroundColor: theme.colors.itemBackgroundColor\n    },\n    priceText: {\n        backgroundColor: theme.colors.primary,\n        borderRadius: 5,\n        paddingLeft: 15,\n        paddingRight: 15\n    },\n    avatar: {\n        backgroundColor: theme.colors.textBar,\n        borderStyle: 'solid',\n        borderWidth: 1\n    },\n    labelText: {\n        marginRight: 5\n    },\n    colorDistance: {\n        marginLeft: 5\n    }\n}));\n\nconst ProductItem: React.FC<AllProducts>\n= ({ id, name, color, price, manufacturer, type }) => {\n    const styles = useStyles();\n\n    return (\n        <Card className={styles.card} elevation={4} id=\"testCard\">\n            <CardHeader\n            avatar={\n                <Avatar\n                aria-label=\"Type Icon\"\n                className={styles.avatar} >\n                    <AvailabilityIcon type={type} manufacturer={manufacturer} id={id} />\n                </Avatar>\n            }\n            action={\n                <Text\n                fontWeight=\"bold\"\n                color=\"textBar\"\n                style={ styles.priceText }\n                id=\"price\" >\n                    { \n                    <React.Fragment>\n                        <span>&euro; </span>\n                        { price }\n                    </React.Fragment> \n                    }\n                </Text>\n            }\n            title={\n                <Text\n                fontSize=\"subheading\"\n                fontWeight=\"bold\"\n                id=\"name\">\n                    { name }\n                </Text>\n            }\n            subheader={\n                <Text\n                color=\"textSecondary\"\n                id=\"manufacturer\">\n                    { manufacturer }\n                </Text>\n            } />\n            <CardContent>\n                <Text\n                style={styles.labelText}>\n                    Color(s):\n                    <span>\n                        { color\n                        .map(col => <CircleIcon id=\"colorSvg\"\n                        key={col} color={col} style={styles.colorDistance} /> ) }\n                    </span>\n                </Text>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default ProductItem;","import axios from \"axios\";\nimport { AllProducts } from \"../types\";\n\nconst baseUrl = '/v2/products';\n\nconst getAll = async (product: AllProducts[\"type\"]): Promise<AllProducts[]> => {\n    const config = {\n        headers: {\n            'Cache-Control': 'public, max-age=300, immutable' // 5 mins (60 secs * 5 mins)\n        }\n    };\n\n    const response = await axios.get<AllProducts[]>(`${baseUrl}/${product}`, config);\n    return response.data;\n};\n\nexport default {\n    getAll\n};","import { useState, useEffect } from \"react\";\nimport productsServices from \"../services/productsServices\";\n\nimport { AllProducts } from \"../types\";\n\nconst useProducts = (type: AllProducts[\"type\"]) => {\n    const [products, setProducts] = useState<AllProducts[] | undefined>(undefined);\n\n    useEffect(() => {\n        productsServices.getAll(type)\n        .then(data => {\n            setProducts(data);\n        })\n        .catch(err => {\n            console.log(err);\n        });\n    }, []);\n\n    return {\n        products\n    };\n};\n\nexport default useProducts;","import React from \"react\";\n\nimport ProductItem from \"../ProductItem\";\nimport useProducts from \"../../hooks/useProducts\";\n\nexport const FacemasksList: React.FC = () => {\n    const { products } = useProducts('facemasks');\n\n    const productsList = products ? products\n    : [];\n\n    return (\n        <div>\n            { productsList.map(product =>\n            <ProductItem key={product.id} {...product} />) }\n        </div>\n    );\n};\n\nexport default FacemasksList;","import React from \"react\";\n\nimport ProductItem from \"../ProductItem\";\nimport useProducts from \"../../hooks/useProducts\";\n\nexport const BeaniesList: React.FC = () => {\n    const { products } = useProducts('beanies');\n\n    const productsList = products ? products\n        : [];\n\n    return (\n        <div>\n            { productsList.map(product =>\n            <ProductItem key={product.id} {...product} />) }\n        </div>\n    );\n};\n\nexport default BeaniesList;","import React from \"react\";\n\nimport ProductItem from \"../ProductItem\";\nimport useProducts from \"../../hooks/useProducts\";\n\nexport const GlovesList: React.FC = () => {\n    const { products } = useProducts('gloves');\n\n    const productsList = products ? products\n        : [];\n\n    return (\n        <div>\n            { productsList.map(product =>\n            <ProductItem key={product.id} {...product} />) }\n        </div>\n    );\n};\n\nexport default GlovesList;","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core\";\nimport Text from \"../Text\";\nimport theme from \"../theme\";\n\nconst useStyles = makeStyles(() => ({\n    appBar: {\n        backgroundColor: theme.colors.appBackgroundColor,\n        padding: 15,\n        marginBottom: 15\n    }\n}));\n\nconst AppBar: React.FC = () => {\n    const styles = useStyles();\n\n    return (\n        <div className={styles.appBar}>\n            <Text\n            color=\"textBar\"\n            fontSize=\"subheading\">\n                Reaktor Internship Problem\n            </Text>\n        </div>\n    );\n};\n\nexport default AppBar;","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nimport theme from \"./theme\";\n\nconst useStyles = makeStyles(() => ({\n    linkButton: {\n        backgroundColor: theme.colors.inactiveButton,\n        '&:hover': {\n            backgroundColor: theme.colors.primary\n        },\n        width: '100%',\n        marginBottom: 15,\n        marginLeft: 10\n    },\n    link: {\n        textDecoration: 'none'\n    }\n}));\n\nconst LinkButton: React.FC<{ to: string, style?: string, children: JSX.Element }>\n= ({ to, style, children }) => {\n    const styles = useStyles();\n    const normalStyles = styles.linkButton;\n    const extraStyles = style ? style : \"\";\n\n    return (\n        <Link to={to} className={styles.link}>\n            <Button className={ `${normalStyles} ${extraStyles}` }\n            variant=\"contained\">\n                {children}\n            </Button>\n        </Link>\n    );\n};\n\nexport default LinkButton;","import React from \"react\";\nimport LinkButton from \"../LinkButton\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\n\nimport Text from \"../Text\";\nimport theme from \"../theme\";\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        flexDirection: 'column',\n        top: 60,\n        position: 'sticky'\n    },\n    isActive: {\n        backgroundColor: theme.colors.primary\n    }\n}));\n\nconst NavigationMenu\n= withRouter(({ history }) => {\n    const styles = useStyles();\n    const isActive = (pathname: string) => {\n        if (history.location.pathname === pathname) {\n            return styles.isActive;\n        } else {\n            return \"\";\n        }\n    };\n\n    return (\n        <div className={styles.container}>\n            <LinkButton to=\"/products/facemasks\"\n            style={isActive('/products/facemasks')}>\n                <Text\n                color=\"textBar\">\n                    Facemasks\n                </Text>\n            </LinkButton>\n            <LinkButton to=\"/products/beanies\"\n            style={isActive('/products/beanies')}>\n                <Text\n                color=\"textBar\">\n                    Beanies\n                </Text>\n            </LinkButton>\n            <LinkButton to=\"/products/gloves\"\n            style={isActive('/products/gloves')}>\n                <Text\n                color=\"textBar\">\n                    Gloves\n                </Text>\n            </LinkButton>\n        </div>\n    );\n});\n\nexport default NavigationMenu;","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { Grid, Container } from \"@material-ui/core\";\n\nimport FacemasksList from \"./components/FacemasksList\";\nimport BeaniesList from \"./components/BeaniesList\";\nimport GlovesList from \"./components/GlovesList\";\nimport AppBar from \"./components/AppBar\";\nimport NavigationMenu from \"./components/NavigationMenu\";\n\n\nconst MainRouter: React.FC = () => {\n    return (\n        <div>\n            <AppBar />\n            <Container fixed>\n                <Grid container spacing={3}>\n                    <Grid item xs={4}>\n                        <NavigationMenu />\n                    </Grid>\n                    <Grid item xs={8}>\n                        <Switch>\n                            <Route path=\"/products/facemasks\"\n                            exact component={FacemasksList} />\n                            <Route path=\"/products/beanies\"\n                            exact component={BeaniesList} />\n                            <Route path=\"/products/gloves\"\n                            exact component={GlovesList} />\n                            <Redirect to=\"/products/facemasks\" />\n                        </Switch>\n                    </Grid>\n                </Grid>\n            </Container>\n        </div>\n    );\n};\n\nexport default MainRouter;","import React from 'react';\nimport MainRouter from \"./MainRouter\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <BrowserRouter>  \n      <MainRouter />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals')\n    .then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    })\n    .catch(error => console.log(error));\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}